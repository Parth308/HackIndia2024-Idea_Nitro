<!DOCTYPE html>
<html lang="en" ng-app="app">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blockchain Demo</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="output.css" rel="stylesheet">
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.js"></script>
    <style>
        body {
            animation: fadeIn 1s ease-in-out;
        }
        @keyframes fadeIn {
            0% { opacity: 0; }
            100% { opacity: 1; }
        }
        .input-field {
            background-color: white;
            color: black;
        }
        .image-container {
            display: flex;
            justify-content: center;
            align-items: center;
            max-width: 100%;
        }
    </style>
</head>
<body ng-controller="BlockController as vm" class="bg-black text-white">
<div class="flex flex-col min-h-[100dvh] p-4 lg:p-6">
  <header class="px-4 lg:px-6 h-14 flex items-center justify-between">
    <a class="flex items-center justify-center text-white" href="#">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="h-6 w-6"
      >
        <path d="M11.767 19.089c4.924.868 6.14-6.025 1.216-6.894m-1.216 6.894L5.86 18.047m5.908 1.042-.347 1.97m1.563-8.864c4.924.869 6.14-6.025 1.215-6.893m-1.215 6.893-3.94-.694m5.155-6.2L8.29 4.26m5.908 1.042.348-1.97M7.48 20.364l3.126-17.727"></path>
      </svg>
      <span class="sr-only">Blockchain Demo</span>
    </a>
    <nav class="flex gap-4 sm:gap-6">
      <a class="text-sm font-medium hover:underline underline-offset-4 text-white" href="#">
        Hashing
      </a>
      <a href="#" class="text-sm font-medium hover:underline underline-offset-4 text-white">
        Blockchain
      </a>
      <a class="text-sm font-medium hover:underline underline-offset-4 text-white" href="#">
        Tokens
      </a>
      <a href="#" class="text-sm font-medium hover:underline underline-offset-4 text-white">
        Coins
      </a>
    </nav>
  </header>
  <main class="flex-1">
    <section class="w-full py-12 md:py-24 lg:py-32 bg-black text-white">
      <div class="container px-4 md:px-6 grid gap-6 lg:grid-cols-2 lg:gap-12">
        <div class="space-y-4">
          <h1 class="text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl xl:text-6xl ml-5">
            Block
          </h1>
          <div class="grid gap-6 bg-black/20 p-6 rounded-lg">
            <div class="space-y-4 relative">
              <p class="text-muted-foreground">
                A blockchain is a decentralized, distributed digital ledger that records transactions across many
                computers in a network. Each block in the chain contains a number of transactions, and every time a
                new transaction occurs, a record of that transaction is added to every participant's ledger.
              </p>
              <h2 class="trigger text-xl font-bold">Block Mining</h2>
            </div>
            <div class="grid grid-cols-3 gap-4">
              <div class="space-y-2">
                <label
                  class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
                  for="block-number"
                >
                  Block Number
                </label>
                <input
                  class="flex h-10 w-full rounded-md border border-input input-field px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-600 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
                  id="block-number"
                  placeholder="Block number"
                  type="number"
                  ng-model="vm.block.number"
                  readonly
                />
              </div>
              <div class="space-y-2">
                <label
                  class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
                  for="nonce"
                >
                  Nonce
                </label>
                <input
                  class="flex h-10 w-full rounded-md border border-input input-field px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-600 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
                  id="nonce"
                  placeholder="Block nonce"
                  type="number"
                  ng-model="vm.block.nonce"
                />
              </div>
              <div class="space-y-2">
                <label
                  class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
                  for="data"
                >
                  Data
                </label>
                <input
                  class="flex h-10 w-full rounded-md border border-input input-field px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-600 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
                  id="data"
                  placeholder="Block data"
                  type="text"
                  ng-model="vm.block.data"
                />
              </div>
            </div>
            <div class="grid gap-2">
              <label
                class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
                for="prev-hash"
              >
                Previous Hash
              </label>
              <input
                class="flex h-10 w-full rounded-md border border-input input-field px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-600 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
                id="prev-hash"
                placeholder="Previous block hash"
                readonly=""
                type="text"
                ng-model="vm.block.prev"
              />
            </div>
            <div class="grid gap-2">
              <label
                class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
                for="hash"
              >
                Hash
              </label>
              <input
                class="flex h-10 w-full rounded-md border border-input input-field px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-600 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
                id="hash"
                placeholder="Block hash"
                readonly=""
                type="text"
                ng-model="vm.block.hash"
              />
            </div>
            <div class="grid gap-2">
              <label
                class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
                for="difficulty"
              >
                Difficulty
              </label>
              <select
    id="difficulty"
    class="block w-full text-black rounded-md border border-input bg-white py-2.5 px-3 ring-offset-background placeholder-gray-500 focus:ring-blue-600"
    ng-model="vm.difficulty"
>
    <option ng-repeat="n in [1,2,3,4,5]" value="{{n}}">{{ '0'.repeat(n) }}</option>
</select>
            </div>
            <div class="flex items-center gap-4 mt-6">
              <button
                class="inline-flex h-10 items-center justify-center rounded-md border border-transparent bg-blue-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:ring-offset-2"
                ng-click="vm.mineBlock()"
              >
                Mine
              </button>
              <div class="text-sm" ng-if="!vm.mining && vm.timeTaken">
                Time Taken: {{ vm.timeTaken | number:2 }} seconds
                <br>
                Speed: {{ vm.speed | number:2 }} blocks/second
            </div>
              <span class="text-sm" ng-show="vm.mining">Mining in progress...</span>
            </div>
          </div>
        </div>
        <div class="image-container">
          <img src="\images\image.jpg" alt="Blockchain Image" class="rounded-lg shadow-lg">
        </div>
      </div>
    </section>
  </main>
</div>
<script>
angular.module('app', [])
.controller('BlockController', function() {
  var vm = this;
  
  vm.difficulty = 3; // Default difficulty level
  vm.block = {
    number: 1, // Set default block number to 1
    nonce: 0,
    data: '',
    prev: '0',
    hash: ''
  };
  
  vm.blocks = [];
  vm.mining = false;
  // Inside your AngularJS controller
vm.mineBlock = function() {
    vm.mining = true;
    var difficultyString = '0'.repeat(vm.difficulty);
    var startTime = new Date().getTime();
    var nonce = 0;
    var hash;
    
    do {
        nonce++;
        hash = CryptoJS.SHA256(vm.block.number + nonce + vm.block.data + vm.block.prev).toString();
    } while (!hash.startsWith(difficultyString));
    
    vm.block.nonce = nonce;
    vm.block.hash = hash;
    vm.blocks.push(angular.copy(vm.block));
    
    var endTime = new Date().getTime();
    var timeTaken = (endTime - startTime) / 1000; // Time in seconds
    var speed = vm.block.number / timeTaken; // Block number per second

    vm.mining = false;
    
    // Update scope variables for display
    vm.timeTaken = timeTaken;
    vm.speed = speed;
};

});
  
</script>
</body>
</html>